{"version":3,"sources":["logo.svg","components/ScoreBoard.tsx","container/ScoreBoardContainer.tsx","types/BasicType.ts","actions/index.ts","container/AddPointButtonContainer.tsx","container/HistoryRollBackContainer.tsx","components/LabelInputComponent.tsx","components/LabelViewComponent.tsx","container/InputViewContainer.tsx","container/ScoreTableContainer.tsx","container/PlaceExchangeButtonContainer.tsx","components/TopPageWrapper.tsx","reducers/teamPoints.ts","reducers/teamConfigs.ts","reducers/index.ts","theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","SizedPaper","styled","Paper","ScoreBoard","props","Box","textAlign","score","ActionType","NameBox","div","ScoreBoardContainer","teamScore","useSelector","state","accumScore","teamId","teamConfigs","find","teamConfig","placeId","teamPoints","filter","teamPoint","map","point","teamName","name","AddPointButtonContainer","dispatch","useDispatch","IconButton","onClick","type","ADD_POINT","payload","addPoint","Add","HistoryRollBackContainer","size","aria-label","ROLL_BACK","History","InputContainer","LabelInputComponent","useState","label","inputVal","setInputVal","TextField","value","onChange","e","target","onLabelSubmit","CheckCircle","ButtonLabelContainer","LabelViewComponent","onEditClick","Create","InputViewContainer","isEditing","setIsEditing","targetTeam","labelVal","preventDefault","EDIT_TEAM_NAME","editTeamName","StyledTable","table","TableContainer","ScoreTableContainer","teamIds","pointTable","pointObj","makePointRow","val","index","key","String","rowData","indexB","length","reduce","acc","curr","PlaceExchangeButtonContainer","teamPlaces","teamPlaceArr","push","event","teamPlace","EDIT_TEAM_PLACE","editTeamPlace","SyncAlt","CenterTextBox","TopPageWrapper","Container","Grid","container","item","xs","pointId","generateNewId","getPointId","action","id","pop","initTeamConfigState","targetTeamConfig","resultTeamConfig","Object","assign","resultTeam","combineReducers","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","store","createStore","rootReducer","App","className","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.9b8ce679.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled from \"styled-components\";\nimport {Paper, Box} from '@material-ui/core'\nimport React, { ReactElement } from \"react\";\n\n\ntype ScoreBoardProps = {\n    score: number;\n}\n\nconst SizedPaper = styled(Paper)`\n    height: 20vw;\n    width: 20vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: bold;\n    margin: auto;\n    font-size: 15vw;\n`;\nfunction ScoreBoard(props: ScoreBoardProps): ReactElement {\n    return (\n        <SizedPaper>\n            <Box textAlign=\"center\">{props.score}</Box>\n        </SizedPaper>\n    )\n}\nexport default ScoreBoard","import React, { ReactElement } from \"react\";\nimport ScoreBoard from \"../components/ScoreBoard\";\nimport { useSelector } from \"react-redux\";\nimport { StoreStateType } from \"../types/BasicType\";\nimport styled from \"styled-components\";\n\ntype ScoreBoardContainerProps = {\n  placeId: number;\n};\nconst NameBox = styled.div`\n    text-align: center;\n`;\n\nconst ScoreBoardContainer: React.FC<ScoreBoardContainerProps> = function ScoreBoardContainer(\n  props\n): ReactElement {\n  const teamScore: number = useSelector((state: StoreStateType) => {\n    let accumScore: number = 0;\n    const teamId = state.teamConfigs.find((teamConfig)=> teamConfig.placeId === props.placeId)?.teamId;\n    state.teamPoints\n      .filter((teamPoint) => teamPoint.teamId === teamId)\n      .map((teamPoint) => {\n        accumScore += teamPoint.point;\n      });\n    return accumScore;\n  });\n  const teamName: string = useSelector((state: StoreStateType)=> {\n      return state.teamConfigs.filter((teamConfig)=> teamConfig.placeId === props.placeId)[0].name;\n  });\n  return (\n      <>\n        <NameBox>{teamName}</NameBox>\n        <ScoreBoard score={teamScore} />\n      </>\n  );\n};\n\nexport default ScoreBoardContainer;\n","import { DefaultRootState } from \"react-redux\";\nimport { TeamPointType } from \"./AddPointType\";\nimport { TeamConfigType } from \"./TeamConfigType\";\n\nexport interface BasicActionType {\n    type: ActionType;\n    payload: {};\n}\n\nexport enum ActionType {\n    ADD_POINT = 'ADD_POINT',\n    MINUS_POINT = 'MINUS_POINT',\n    ROLL_BACK = 'ROLL_BACK', \n    EDIT_TEAM_NAME = 'EDIT_TEAM_NAME',\n    EDIT_TEAM_PLACE = 'EDIT_TEAM_PLACE'\n}\n\nexport type StoreStateType = DefaultRootState & {\n    teamPoints: TeamPointType[];\n    teamConfigs: TeamConfigType[];\n}","import { AddPointVariables, AddPointType } from \"../types/AddPointType\";\nimport { ActionType, BasicActionType } from \"../types/BasicType\";\nimport { EditTeamNameVariables, EditTeamNameAction, EditTeamPlaceVariables, EditTeamPlaceAction } from \"../types/TeamConfigType\";\n\nexport const addPoint = ({point = 1, teamId}: AddPointVariables): AddPointType => ({\n    type: ActionType.ADD_POINT,\n    payload: {\n        point,\n        teamId\n    }\n})\n\nexport const rollBack = (): BasicActionType => ({\n    type: ActionType.ROLL_BACK,\n    payload: {}\n});\n\nexport const editTeamName = ({teamId, name}: EditTeamNameVariables): EditTeamNameAction => ({\n    type: ActionType.EDIT_TEAM_NAME,\n    payload: {\n        teamId,\n        name\n    }\n});\n\nexport const editTeamPlace = ({teamId, placeId}: EditTeamPlaceVariables): EditTeamPlaceAction=> ({\n    type: ActionType.EDIT_TEAM_PLACE,\n    payload: {\n        teamId,\n        placeId\n    }\n});\n","import { IconButton } from \"@material-ui/core\"\nimport { Add as AddButton } from \"@material-ui/icons\"\nimport { useDispatch } from \"react-redux\"\nimport React, { ReactElement } from \"react\";\nimport { addPoint } from \"../actions\";\n\ntype AddPointButtonContainerProps = {\n    point: number;\n    teamId: number;\n}\n\nconst AddPointButtonContainer: React.FC<AddPointButtonContainerProps> = function AddPointButtonContainer(props): ReactElement {\n    const dispatch = useDispatch();\n    return (\n        <IconButton onClick={()=> dispatch(addPoint({point: props.point, teamId: props.teamId}))}>\n            <AddButton />\n        </IconButton>\n    )\n}\n\nexport default AddPointButtonContainer;\n","import React, { ReactElement } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { History as HistoryButton } from \"@material-ui/icons\";\nimport { IconButton } from \"@material-ui/core\";\nimport { rollBack } from \"../actions\";\n\nconst HistoryRollBackContainer: React.FC = function HistoryRollBackContainer(): ReactElement {\n  const dispatch = useDispatch();\n  return (\n    <IconButton size=\"medium\" aria-label=\"history\" onClick={()=> dispatch(rollBack())}>\n      <HistoryButton></HistoryButton>\n    </IconButton>\n  );\n};\n\nexport default HistoryRollBackContainer;\n","import React, { ReactElement, useState } from \"react\";\nimport { TextField, IconButton } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { CheckCircle } from \"@material-ui/icons\";\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  > div{\n      width: 100%;\n  }\n`;\n\ntype LabelInputComponentProps = {\n  label: string;\n  onLabelSubmit: (e: React.MouseEvent, labelVal: string)=> void;\n};\n\nconst LabelInputComponent: React.FC<LabelInputComponentProps> = function LabelInputComponent(\n  props\n): ReactElement {\n    const [inputVal, setInputVal] = useState<string>(props.label);\n    const onValChange = (e: React.ChangeEvent<HTMLInputElement>)=> {\n        setInputVal(e.target.value);\n    }\n  return (\n    <InputContainer>\n      <TextField value={inputVal} onChange={onValChange} />\n      <IconButton onClick={(e)=> props.onLabelSubmit(e, inputVal)}>\n        <CheckCircle />\n      </IconButton>\n    </InputContainer>\n  );\n};\n\nexport default LabelInputComponent;\n","import React, { ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Create } from \"@material-ui/icons\";\n\ntype LabelViewComponentProps = {\n  label: string;\n  onEditClick: React.MouseEventHandler;\n};\n\nconst ButtonLabelContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  p {\n      text-align: center;\n      width: 100%;\n  }\n`;\n\nconst LabelViewComponent: React.FC<LabelViewComponentProps> = function LabelViewComponent(\n  props\n): ReactElement {\n  return (\n    <ButtonLabelContainer>\n      <p>{props.label}</p>\n      <IconButton onClick={props.onEditClick}>\n        <Create />\n      </IconButton>\n    </ButtonLabelContainer>\n  );\n};\n\nexport default LabelViewComponent;\n","import React, { ReactElement, useState } from \"react\";\nimport LabelInputComponent from \"../components/LabelInputComponent\";\nimport LabelViewComponent from \"../components/LabelViewComponent\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { StoreStateType } from \"../types/BasicType\";\nimport { editTeamName } from \"../actions\";\n\ntype InputViewContainerProps = {\n  teamId: number;\n};\n\nconst InputViewContainer: React.FC<InputViewContainerProps> = function InputViewContainer(\n  props\n): ReactElement {\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const teamName: string = useSelector((state: StoreStateType) => {\n    const targetTeam = state.teamConfigs.find(\n      (teamConfig) => teamConfig.teamId === props.teamId\n    );\n    return targetTeam ? targetTeam.name : \"\";\n  });\n  const dispatch = useDispatch();\n  const submitNameHandler = (e: React.MouseEvent, labelVal: string)=> {\n      e.preventDefault();\n      dispatch(editTeamName({teamId: props.teamId, name: labelVal}));\n      setIsEditing(false);\n  }\n  const editHandler: React.MouseEventHandler = (e) => {\n    e.preventDefault();\n    setIsEditing(true);\n  };\n  return (\n    <>\n      {isEditing ? (\n        <LabelInputComponent label={teamName} onLabelSubmit={submitNameHandler} />\n      ) : (\n        <LabelViewComponent label={teamName} onEditClick={editHandler} />\n      )}\n    </>\n  );\n};\n\nexport default InputViewContainer;\n","import React, { ReactElement } from \"react\";\nimport { StoreStateType } from \"../types/BasicType\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport InputViewContainer from \"./InputViewContainer\"\n\nconst StyledTable = styled.table`\n  th{\n    border: solid 1px black;\n  }\n  td {\n    border: solid 1px black;\n    padding: 5px;\n    text-align: center;\n  }\n`;\n\nconst TableContainer = styled.div`\n  width: 100%;\n  overflow-x: scroll;\n`;\n\nconst ScoreTableContainer: React.FC = function ScoreTableContainer(): ReactElement {\n  const teamIds: number[] = [1, 2];\n  const makePointRow: (teamId: Number, state: StoreStateType) => number[] = (\n    teamId,\n    state\n  ): number[] => {\n    return state.teamPoints.map((pointObj) =>\n      teamId === pointObj.teamId ? pointObj.point : 0\n    );\n  };\n  const pointTable: number[][] = useSelector((state: StoreStateType) => {\n    return teamIds.map((teamId) => makePointRow(teamId, state));\n  });\n  return (\n    <TableContainer>\n      <StyledTable>\n      <thead>\n        <tr>\n          <th>name</th>\n          {pointTable[0].map((val, index)=> {\n            return <th key={'th'+ String(index)}>{index + 1}</th>\n          })}\n          <th>sum</th>\n        </tr>\n      </thead>\n      <tbody>\n        {pointTable.map((rowData, index) => {\n          return (\n            <tr key={index}>\n              <td><InputViewContainer teamId={index+1}/></td>\n              {rowData.map((val, indexB) => (\n                <td key={String(index) + String(indexB)}>{val ? val : \"\"}</td>\n              ))}\n              {rowData.length > 0 ? (\n                <td>{rowData.reduce((acc, curr) => acc + curr)} </td>\n              ) : null}\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n    </TableContainer>\n    \n  );\n};\n\nexport default ScoreTableContainer;\n","import React, { ReactElement } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { EditTeamPlaceVariables } from \"../types/TeamConfigType\";\nimport { StoreStateType } from \"../types/BasicType\";\nimport { editTeamPlace } from \"../actions\";\nimport { IconButton } from \"@material-ui/core\";\nimport { SyncAlt } from \"@material-ui/icons\";\n\nexport const MAX_PLACE_ID = 2;\nexport const MIN_PLACE_ID = 1;\n\nconst PlaceExchangeButtonContainer: React.FC = function PlaceExchangeButtonContainer(): ReactElement {\n    const dispatch = useDispatch();\n    const teamPlaces: EditTeamPlaceVariables[] = useSelector((state: StoreStateType)=> {\n        let teamPlaceArr: EditTeamPlaceVariables[] = [];\n        state.teamConfigs.map((teamConfig)=> {\n            teamPlaceArr.push({\n                teamId: teamConfig.teamId,\n                placeId: teamConfig.placeId\n            });\n        });\n        return teamPlaceArr;\n    });\n    const onClick: React.MouseEventHandler = (event)=> {\n        event.preventDefault();\n        teamPlaces.map((teamPlace)=> {\n            dispatch(editTeamPlace({teamId: teamPlace.teamId, placeId: teamPlace.placeId < MAX_PLACE_ID? teamPlace.placeId + 1 : MIN_PLACE_ID}));\n        })\n    } \n    return (\n        <IconButton size=\"medium\" onClick={onClick}>\n            <SyncAlt/>\n        </IconButton>\n    );\n};\n\nexport default PlaceExchangeButtonContainer;\n","import { Container, Grid, Box } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport React, { ReactElement } from \"react\";\n\nimport ScoreBoardContainer from \"../container/ScoreBoardContainer\";\nimport AddPointButtonContainer from \"../container/AddPointButtonContainer\";\nimport HistoryRollBackContainer from \"../container/HistoryRollBackContainer\";\nimport ScoreTableContainer from \"../container/ScoreTableContainer\";\nimport PlaceExchangeButtonContainer from \"../container/PlaceExchangeButtonContainer\";\nconst CenterTextBox = styled(Box)`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 15vw;\n  font-weight: bold;\n`;\nconst TopPageWrapper: React.FC = function TopPageWrapper(): ReactElement {\n  return (\n    <Container>\n      <Grid container>\n        <Grid item xs={5}>\n          <Box textAlign={\"center\"}>\n            <ScoreBoardContainer placeId={1} />\n          </Box>\n        </Grid>\n        <Grid item xs={2}>\n          <CenterTextBox>ー</CenterTextBox>\n        </Grid>\n        <Grid item xs={5}>\n          <Box textAlign={\"center\"}>\n            <ScoreBoardContainer placeId={2} />\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={5}>\n          <Box textAlign={\"center\"}>\n            <AddPointButtonContainer point={1} teamId={1} />\n          </Box>\n        </Grid>\n        <Grid item xs={2}>\n          <Box textAlign={\"center\"}>\n            <HistoryRollBackContainer />\n            <PlaceExchangeButtonContainer />\n          </Box>\n        </Grid>\n        <Grid item xs={5}>\n          <Box textAlign={\"center\"}>\n            <AddPointButtonContainer point={1} teamId={2} />\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={12}>\n          <ScoreTableContainer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default TopPageWrapper;\n","import { AddPointType, TeamPointType } from \"../types/AddPointType\";\nimport { ActionType } from \"../types/BasicType\";\nlet pointId: number = 0;\nexport const generateNewId = ()=> {\n    return pointId++;\n}\nexport const getPointId = (): number => {\n    return pointId;\n}\nconst teamPoints = (state = [], action: AddPointType ): TeamPointType[] => {\n    switch (action.type) {\n        case ActionType.ADD_POINT:\n            generateNewId();\n            return [...state, {id:getPointId(), teamId: action.payload.teamId, point: action.payload.point}];\n        // case ActionType.MINUS_POINT: \n        case ActionType.ROLL_BACK: \n            state.pop();\n            return [...state];\n        default:\n            return state;\n    }\n}\n\nexport default teamPoints;","import { TeamConfigType, EditTeamConfigAction, EditTeamNameAction, EditTeamPlaceAction } from \"../types/TeamConfigType\";\nimport { ActionType } from \"../types/BasicType\";\n\nconst initTeamConfigState: TeamConfigType[] = [\n  { teamId: 1, name: \"\", placeId: 1 },\n  { teamId: 2, name: \"\", placeId: 2 },\n];\nconst teamConfigs = (\n  state = initTeamConfigState,\n  action: EditTeamConfigAction\n): TeamConfigType[] => {\n  switch (action.type) {\n    case ActionType.EDIT_TEAM_NAME:\n      const targetTeamConfig = state.find(\n        (teamConfig) => teamConfig.teamId === action.payload.teamId\n      );\n      const resultTeamConfig: TeamConfigType = {\n        ...Object.assign({}, targetTeamConfig),\n        name: (action as EditTeamNameAction).payload.name,\n      };\n      return [\n        ...state.filter(\n          (teamConfig) => teamConfig.teamId !== action.payload.teamId\n        ),\n        resultTeamConfig,\n      ];\n    case ActionType.EDIT_TEAM_PLACE:\n      const targetTeam = state.find(\n        (teamConfig) => teamConfig.teamId === action.payload.teamId\n      );\n      const resultTeam: TeamConfigType = {\n        ...Object.assign({}, targetTeam),\n        placeId: (action as EditTeamPlaceAction).payload.placeId,\n      };\n      return [\n        ...state.filter(\n          (teamConfig) => teamConfig.teamId !== action.payload.teamId\n        ),\n        resultTeam,\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default teamConfigs;\n","import { combineReducers } from \"redux\";\nimport teamPoints from \"./teamPoints\";\nimport teamConfigs from \"./teamConfigs\";\n\nexport default combineReducers({\n    teamPoints,\n    teamConfigs\n});\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\n// Create a theme instance.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TopPageWrapper from './components/TopPageWrapper';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers'\nimport { ThemeProvider as MuiThemeProvider} from '@material-ui/core';\nimport theme from './theme';\nimport { ThemeProvider as ScThemeProvider } from 'styled-components';\n\nconst store = createStore(rootReducer);\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <ScThemeProvider theme={theme}>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </header>\n            <TopPageWrapper />\n          </div>\n        </ScThemeProvider>\n      </MuiThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}